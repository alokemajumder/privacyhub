import { jsPDF } from 'jspdf';
import html2canvas from 'html2canvas';
import { PrivacyAnalysis } from '../types';

export const generatePDF = async (analysis: PrivacyAnalysis, element: HTMLElement): Promise<void> => {
  try {
    // Create a new PDF document
    const pdf = new jsPDF({
      orientation: 'portrait',
      unit: 'mm',
      format: 'a4',
    });
    
    // Set document properties
    pdf.setProperties({
      title: `${analysis.siteName} Privacy Policy Analysis`,
      subject: 'Privacy Policy Analysis',
      author: 'PrivacyHub.in',
      keywords: 'privacy, policy, analysis, compliance',
      creator: 'PrivacyHub.in'
    });
    
    // Capture the HTML element as canvas
    const canvas = await html2canvas(element, {
      scale: 2, // Higher scale for better quality
      useCORS: true,
      logging: false,
      allowTaint: true,
      backgroundColor: '#ffffff'
    });
    
    // Calculate dimensions to fit the PDF page
    const imgData = canvas.toDataURL('image/png');
    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();
    
    // Calculate the number of pages needed
    const imgWidth = pageWidth - 20; // 10mm margin on each side
    const imgHeight = (canvas.height * imgWidth) / canvas.width;
    const pageCount = Math.ceil(imgHeight / (pageHeight - 40)); // 20mm margin top and bottom
    
    // Add header to first page
    pdf.setFillColor(0, 164, 233); // Primary color
    pdf.rect(0, 0, pageWidth, 20, 'F');
    pdf.setTextColor(255, 255, 255);
    pdf.setFontSize(14);
    pdf.text('PrivacyHub.in - Privacy Policy Analysis', 10, 13);
    
    // Add the image to the PDF, splitting across pages if necessary
    let heightLeft = imgHeight;
    let position = 0;
    let pageNumber = 1;
    
    // Add first page content
    pdf.addImage(
      imgData,
      'PNG',
      10, // x position
      25, // y position (below header)
      imgWidth,
      imgHeight > pageHeight - 40 ? pageHeight - 40 : imgHeight
    );
    
    heightLeft -= (pageHeight - 40);
    position = heightLeft;
    
    // Add additional pages if needed
    while (heightLeft > 0) {
      pageNumber++;
      pdf.addPage();
      
      // Add header to each page
      pdf.setFillColor(0, 164, 233);
      pdf.rect(0, 0, pageWidth, 20, 'F');
      pdf.setTextColor(255, 255, 255);
      pdf.setFontSize(14);
      pdf.text('PrivacyHub.in - Privacy Policy Analysis', 10, 13);
      
      // Add content
      pdf.addImage(
        imgData,
        'PNG',
        10,
        25 - position,
        imgWidth,
        imgHeight
      );
      
      heightLeft -= (pageHeight - 40);
      position += (pageHeight - 40);
    }
    
    // Add footer to each page
    for (let i = 1; i <= pageNumber; i++) {
      pdf.setPage(i);
      pdf.setFontSize(10);
      pdf.setTextColor(100, 100, 100);
      pdf.text(`Generated by PrivacyHub.in | Page ${i} of ${pageNumber}`, pageWidth / 2, pageHeight - 10, { align: 'center' });
      pdf.text(`Analysis Date: ${new Date().toLocaleDateString()}`, 10, pageHeight - 10);
      pdf.text('privacyhub.in', pageWidth - 10, pageHeight - 10, { align: 'right' });
    }
    
    // Save the PDF
    pdf.save(`${analysis.siteName.replace(/\s+/g, '-').toLowerCase()}-privacy-analysis.pdf`);
  } catch (error) {
    console.error('Error generating PDF:', error);
    throw error;
  }
};